node {
    def myGradleContainer = docker.image('gradle:8.5-jdk8')
    myGradleContainer.pull()

    try {
        stage('Preparación') {
            git branch: 'main', url: 'https://github.com/macloujulian/gs-gradle.git'
        }

        stage('Construcción') {
            myGradleContainer.inside {
                sh 'cd complete && ./gradlew build'
            }
        }

        stage('Sonar Scanner') {
            def sonarScanner = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'

            withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_TOKEN')]) {
                withEnv(["SONAR_TOKEN=${SONAR_TOKEN}"]) {
                    sh """
                        ${sonarScanner}/bin/sonar-scanner \\
                          -Dsonar.host.url=http://sonarqube:9000 \\
                          -Dsonar.login=$SONAR_TOKEN \\
                          -Dsonar.projectKey=GS \\
                          -Dsonar.projectName=gs-gradle \\
                          -Dsonar.projectVersion=$BUILD_NUMBER \\
                          -Dsonar.sources=complete/src/main \\
                          -Dsonar.tests=complete/src/test \\
                          -Dsonar.java.binaries=complete/build/classes
                    """
                }
            }
        }

    } catch (e) {
        // 🔔 Notificación a Slack si algo falla
        slackSend (
            color: '#FF0000',
            message: "*Falló el pipeline del proyecto gs-gradle en Jenkins.*\nJob: ${env.JOB_NAME} #${env.BUILD_NUMBER}\nError: ${e.getMessage()}",
            channel: '#alertas'
        )
        throw e // re-lanzar el error para que Jenkins lo marque como fallo
    }
}
